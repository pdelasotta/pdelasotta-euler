# time:    6323.63 real      5441.77 user       852.00 sys
# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
#
import sys

def main():
    targetDivisorCount = 500
    triangleIndex = 1
    triangleValue = 1
    while (len(getDivisors(triangleValue)) < targetDivisorCount):
        triangleIndex = triangleIndex + 1
        triangleValue = triangleValue + triangleIndex
    print(triangleValue)

def getDivisors(numberToCheck):
    divisorsFound = []
    for i in range(1, numberToCheck, 1):
        if(numberToCheck%i == 0):
            if(i not in divisorsFound):
                divisorsFound.append(i)
                divisorsFound.append(numberToCheck/i)
            else:
                return divisorsFound

    return divisorsFound

if __name__ == '__main__':
    main()
